export const snapshot = {};

snapshot[`isObjectOf<T> > returns properly named function 1`] = `
"isObjectOf({
  a: isNumber,
  b: isString,
  c: isBoolean
})"
`;

snapshot[`isObjectOf<T> > returns properly named function 2`] = `"isObjectOf({a: a})"`;

snapshot[`isObjectOf<T> > returns properly named function 3`] = `
"isObjectOf({
  a: isObjectOf({
    b: isObjectOf({c: isBoolean})
  })
})"
`;

snapshot[`isOptionalOf<T> > returns properly named function 1`] = `"isOptionalOf(isNumber)"`;

snapshot[`isAllOf<T> > returns properly named function 1`] = `
"isAllOf([
  isObjectOf({a: isNumber}),
  isObjectOf({b: isString})
])"
`;

snapshot[`isArrayOf<T> > returns properly named function 1`] = `"isArrayOf(isNumber)"`;

snapshot[`isArrayOf<T> > returns properly named function 2`] = `"isArrayOf((anonymous))"`;

snapshot[`isInstanceOf<T> > returns properly named function 1`] = `"isInstanceOf(Date)"`;

snapshot[`isInstanceOf<T> > returns properly named function 2`] = `"isInstanceOf((anonymous))"`;

snapshot[`isLiteralOf<T> > returns properly named function 1`] = `'isLiteralOf("hello")'`;

snapshot[`isLiteralOf<T> > returns properly named function 2`] = `"isLiteralOf(100)"`;

snapshot[`isLiteralOf<T> > returns properly named function 3`] = `"isLiteralOf(100n)"`;

snapshot[`isLiteralOf<T> > returns properly named function 4`] = `"isLiteralOf(true)"`;

snapshot[`isLiteralOf<T> > returns properly named function 5`] = `"isLiteralOf(null)"`;

snapshot[`isLiteralOf<T> > returns properly named function 6`] = `"isLiteralOf(undefined)"`;

snapshot[`isLiteralOf<T> > returns properly named function 7`] = `"isLiteralOf(Symbol(asdf))"`;

snapshot[`isOneOf<T> > returns properly named function 1`] = `
"isOneOf([
  isNumber,
  isString,
  isBoolean
])"
`;

snapshot[`isLiteralOneOf<T> > returns properly named function 1`] = `'isLiteralOneOf(["hello", "world"])'`;

snapshot[`isRecordOf<T> > returns properly named function 1`] = `"isRecordOf(isNumber)"`;

snapshot[`isRecordOf<T> > returns properly named function 2`] = `"isRecordOf((anonymous))"`;

snapshot[`isReadonlyTupleOf<T> > returns properly named function 1`] = `
"isReadonlyTupleOf([
  isNumber,
  isString,
  isBoolean
])"
`;

snapshot[`isReadonlyTupleOf<T> > returns properly named function 2`] = `"isReadonlyTupleOf([(anonymous)])"`;

snapshot[`isReadonlyTupleOf<T> > returns properly named function 3`] = `
"isReadonlyTupleOf([
  isReadonlyTupleOf([
    isReadonlyTupleOf([
      isNumber,
      isString,
      isBoolean
    ])
  ])
])"
`;

snapshot[`isUniformTupleOf<T> > returns properly named function 1`] = `"isUniformTupleOf(3, isAny)"`;

snapshot[`isUniformTupleOf<T> > returns properly named function 2`] = `"isUniformTupleOf(3, isNumber)"`;

snapshot[`isUniformTupleOf<T> > returns properly named function 3`] = `"isUniformTupleOf(3, (anonymous))"`;

snapshot[`isReadonlyUniformTupleOf<T> > returns properly named function 1`] = `"isReadonlyUniformTupleOf(3, isAny)"`;

snapshot[`isReadonlyUniformTupleOf<T> > returns properly named function 2`] = `"isReadonlyUniformTupleOf(3, isNumber)"`;

snapshot[`isReadonlyUniformTupleOf<T> > returns properly named function 3`] = `"isReadonlyUniformTupleOf(3, (anonymous))"`;

snapshot[`isTupleOf<T> > returns properly named function 1`] = `
"isTupleOf([
  isNumber,
  isString,
  isBoolean
])"
`;

snapshot[`isTupleOf<T> > returns properly named function 2`] = `"isTupleOf([(anonymous)])"`;

snapshot[`isTupleOf<T> > returns properly named function 3`] = `
"isTupleOf([
  isTupleOf([
    isTupleOf([
      isNumber,
      isString,
      isBoolean
    ])
  ])
])"
`;
